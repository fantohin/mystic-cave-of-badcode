// main global script file
int GLOBAL_dj_set_1_agitation;
int GLOBAL_dj_set_1_delay;

bool GLOBAL_dj_set_2_active;
bool GLOBAL_dj_set_1_active;


bool GLOBAL_hideout_active;

int GLOBAL_dj_set_2_result_timeout;
int GLOBAL_dj_set_2_reqaction;
int GLOBAL_dj_set_2_actiondone;
int GLOBAL_dialog_state;

int GLOBAL_work_visitor;
int GLOBAL_work_blacksmith_mdust;

float GLOBAL_members;
float GLOBAL_greg_value;
int GLOBAL_available_members;
int GLOBAL_quest_members;
int GLOBAL_mining_members;
float GLOBAL_lumberjack_members;

int GLOBAL_resourse_mdust;
int GLOBAL_resourse_wsplinters;
int GLOBAL_resourse_mdust_max;
int GLOBAL_resourse_wsplinters_max;
int GLOBAL_resourse_gcoin;
int GLOBAL_resourse_gcoin_max;

GUI *GLOBAL_location_now;
GUI *GLOBAL_location_next;
#define TIMER_location_change_delay 1
#define TIMER_location_dim 2
#define TIMER_membersinfo_dim 3


// called when the game starts, before the first room is loaded
function game_start()
{
  GLOBAL_greg_value = 0.9;
  
  GLOBAL_members = 1.0 + GLOBAL_greg_value;
  // Auto-save on the save slot 999
  SetRestartPoint();
  
  GLOBAL_location_now = gui_intro;
  GLOBAL_dj_set_1_agitation = 0;
  GLOBAL_dj_set_1_delay = 0;
  GLOBAL_dj_set_1_active = false;
  GLOBAL_dj_set_2_active = false;
  GLOBAL_hideout_active = false;
  GLOBAL_dj_set_2_actiondone = 0;
  GLOBAL_dialog_state = -1;
  
  GLOBAL_mining_members = 0;
  GLOBAL_lumberjack_members = GLOBAL_greg_value;
  
  GLOBAL_resourse_mdust=0;
  GLOBAL_resourse_wsplinters=3;
  GLOBAL_resourse_mdust_max=20;
  GLOBAL_resourse_wsplinters_max=100;
  
  GLOBAL_work_visitor=0;
  GLOBAL_work_blacksmith_mdust=0;
}

function fn_location_info(const string text) {
  mgui_location.Transparency=0;
  mgui_location.Visible=true;
  txt_location_info.Text=text;
  SetTimer(TIMER_location_dim,  40);
}

function fn_location_info_dim() {
  if (IsTimerExpired(TIMER_location_dim)) {
    if (mgui_location.Transparency<100) mgui_location.Transparency = mgui_location.Transparency+1;
    SetTimer(TIMER_location_dim,  4);
  }
}

function fn_members_info() {
  mgui_membersjoin.Transparency=0;
  mgui_membersjoin.Visible=true;
  SetTimer(TIMER_membersinfo_dim,  60);
}

function fn_members_info_dim() {
  if (IsTimerExpired(TIMER_membersinfo_dim)) {
    if (mgui_membersjoin.Transparency<100) mgui_membersjoin.Transparency = mgui_membersjoin.Transparency+1;
    SetTimer(TIMER_membersinfo_dim,  4);
  }
}

function fn_location_change(GUI *location_next,  int delay)
{
  SetTimer(TIMER_location_change_delay,  delay);
  GLOBAL_location_next = location_next;
}

function fn_check_location_change()
{ 
  if (IsTimerExpired(TIMER_location_change_delay)) {
          
  GLOBAL_location_now.Visible = false;
  GLOBAL_location_next.Visible = true;
  GLOBAL_location_now = GLOBAL_location_next;
  
    switch (GLOBAL_location_next.ScriptName) {
      case "gui_hideout":
        fn_location_info("greycat township: secret gathering place");
        GLOBAL_mining_members = 0;
        GLOBAL_lumberjack_members = 0.0;
        GLOBAL_quest_members = 0;
        break;
      case "gui_dj_set_1":
        GLOBAL_dj_set_1_active = true;
        fn_location_info("greycat township: deadriver catacombs");
        break;
      case "gui_dj_set_2":
        mgui_quests.Visible = true;
        GLOBAL_dj_set_1_active = false;
        GLOBAL_dj_set_2_active = true;
        break;
      case "gui_dj_set_3":
        fn_location_change(gui_hideout, 120);
        break; 
    }
  }
}

function fn_mouse_img() {
    if (mouse.Mode<2) {
      if(mouse.IsButtonDown(eMouseLeft)) 
      {
        mouse.Mode = 1;
        return;
      }
      mouse.Mode=0;
    }
}

// called when a key is pressed
function on_key_press(eKeyCode keycode, int mod)
{
  if (IsGamePaused())
  {
    // game paused, so don't react to any keypresses
    keycode = 0;
  }
  else if (keycode == eKeyQ && (mod & eKeyModCtrl))
  {
    // Ctrl-Q will quit the game
    QuitGame(1);
  }
  else if (keycode == eKeyF9)
  {
    // F9 will restart the game
    RestartGame();
  }
  else if (keycode == eKeyF12)
  {
    // F12 will save a screenshot to the save game folder
    SaveScreenShot("screenshot.pcx");
  }
  else if (mod & eKeyModCtrl)
  {
    if (keycode == eKeyS)
    {
      // Ctrl-S will give the player all defined inventory items
      Debug(0, 0);
    }
    else if (keycode == eKeyV)
    {
      // Ctrl-V will show game engine version and build date
      Debug(1, 0);
    }
    else if (keycode == eKeyA)
    {
      // Ctrl-A will show walkable areas
      Debug(2, 3);
    }
    else if (keycode == eKeyX)
    {
      // Ctrl-X will let the player teleport to any room
      Debug(3, 0);
    }
  }
}

// called when a mouse button is clicked
function on_mouse_click(MouseButton button)
{
  mouse.Mode = 0;
  
  if (IsGamePaused())
  {
    // game is paused, so do nothing (i.e. don't process mouse clicks)
  }
  else if (button == eMouseLeft)
  {
    // left-click, so try using the current mouse cursor mode at this position
    Room.ProcessClick(mouse.x, mouse.y, mouse.Mode);
    mouse.Mode=1;
    SetTimer(1, 20);
  }
  else if (button == eMouseRight)
  {
    // right-click, so cycle the mouse cursor mode
    mouse.SelectNextMode();
  }
}

function dialog_request(int param)
{

}


function btn_understand_OnClick(GUIControl *control, MouseButton button)
{
  mgui_overview.Visible = true;
  txt_quests.Text = "Help:[[Keep pressing the scream button.";
  fn_location_change(gui_dj_set_1, 1);
}

function fn_dj_set_1_agitation()
{
  GLOBAL_quest_members = 1;
  if (GLOBAL_dj_set_1_agitation==4) {
    lvl_dj_set_1_scream.HandleGraphic = 14;
    return;  
  }
  
  if (lvl_dj_set_1_scream.Value>990) {
  GLOBAL_dj_set_1_agitation=4;
  txt_quest1.Visible=true;
  txt_quests.Text = "Help: [[you need to perform DANCE OF THE DAMNED dj set for the potential members of the Cult of the Damned ";
  fn_location_change(gui_dj_set_2,  65);
  }
  
  if (lvl_dj_set_1_scream.Value>650 && GLOBAL_dj_set_1_agitation == 2) 
  {
    //img_dj_set_1_agitation2.Visible=true;
    GLOBAL_dj_set_1_agitation=3;
    //lvl_dj_set_1_scream.Value=740;
    txt_dj_set_1_agitation1.Text="Ohhhh yea... Lets Rave! damned dance! AAAAAAAAA";
    txt_dj_set_1_agitation2.Text="Aaaaaaaaaaaaaaaaaaaaae aaaAaaaaaaaaaaaaaaaaaaaa";
    return;
  }
  
  if (lvl_dj_set_1_scream.Value>350 && GLOBAL_dj_set_1_agitation == 1) 
  {
    GLOBAL_dj_set_1_agitation=2;
    //lvl_dj_set_1_scream.Value=400;
    txt_dj_set_1_agitation1.Text="Ohhhh yea";
    txt_dj_set_1_agitation2.Text="Aaaaaaaaaaaaaaaaaaaaaea";
    return;
  }
  
  if (lvl_dj_set_1_scream.Value>150 && GLOBAL_dj_set_1_agitation == 0) 
  {
    //img_sj_set_1_agitation1.Visible=true;
    GLOBAL_dj_set_1_agitation=1;
    //lvl_dj_set_1_scream.Value=200;
    txt_dj_set_1_agitation1.Text="Ohhhh ";
    txt_dj_set_1_agitation2.Text="Aaaaa";
    return;
  }
}

function fn_dj_set_1_loop() {
  btn_dj_set_1_A.Enabled = true;
  txt_dj_set_1_mission.Text = String.Format("Completed: %d%", lvl_dj_set_1_scream.Value/10); 
  GLOBAL_dj_set_1_delay = GLOBAL_dj_set_1_delay + 1;
  if (GLOBAL_dj_set_1_delay>60) {
    //btn_dj_set_1_A.Enabled = true;
    if (GLOBAL_dj_set_1_delay%22==0  && GLOBAL_dj_set_1_agitation!=4) img_screamlbl.Enabled = !img_screamlbl.Enabled;
  }
  
  if (lvl_dj_set_1_scream.Value>10) {
    lvl_dj_set_1_scream.Value = lvl_dj_set_1_scream.Value + 1 + Random(2)*GLOBAL_dj_set_1_agitation;
    fn_dj_set_1_agitation();
  }
  
}

function fn_dj_set_2_action(int action_taken) {
  if (action_taken==GLOBAL_dj_set_2_reqaction)
  {
    GLOBAL_dj_set_2_actiondone = 1;
} else if (GLOBAL_dj_set_2_actiondone!=-1) {
if (action_taken<2 || GLOBAL_dj_set_2_reqaction == 0 || GLOBAL_dj_set_2_reqaction == 1 || GLOBAL_dj_set_2_reqaction == 4) { 
    lvl_dj_set_2_mission.Value = lvl_dj_set_2_mission.Value - 10;
    txt_dj_set_2_result.Text = "BAD. -10";
    GLOBAL_dj_set_2_actiondone = -1;
    GLOBAL_dj_set_2_result_timeout = 20;
    } 
  }
}

function fn_dj_set_2_loop() {
  GLOBAL_dj_set_2_result_timeout = GLOBAL_dj_set_2_result_timeout - 1;
  
  if (GLOBAL_dj_set_2_actiondone < 2 && (GLOBAL_dj_set_2_reqaction ==2 || GLOBAL_dj_set_2_reqaction ==3)) {
    fn_dj_set_2_action(lvl_dj_set_2_knob.Value+2);
  }
    
  txt_dj_set_2_mission.Text = String.Format("Completed: %d%", lvl_dj_set_2_mission.Value); 
  
  //TO_DO
  if (txt_dj_set_2_result.Text == "Good! wait...")
  {
    txt_dj_set_2_info1.Text = "Yeaaaa";
    txt_dj_set_2_info2.Text = "GOOD";
  } else {
    txt_dj_set_2_info1.Text = "..";
    txt_dj_set_2_info2.Text = "..";  
  }
  
  if (lvl_dj_set_2_timeleft.Value > 20 && !GLOBAL_dj_set_2_actiondone) {
    txt_dj_set_2_result.Text = "";
  }
  if (lvl_dj_set_2_mission.Value==lvl_dj_set_2_mission.Max) {
    txt_quest1.TextColor = 14;
    txt_dj_set_2_mission.Text = "Quest Completed.";
    txt_dj_set_2_result.Text = "Good... wait for the members to gather...";
    txt_dj_set_2_reqaction.Text = "wait...";
    btn_dj_set_2_scratch.Clickable = false;
    btn_dj_set_2_spin.Clickable = false;
    fn_members_info();
    GLOBAL_members = GLOBAL_members + 5.0;
    GLOBAL_dj_set_2_active = false;
    txt_dj_set_2_info1.Text = "I will join";
    txt_dj_set_2_info2.Text = "I will join too";
    fn_location_change(gui_dj_set_3, 22);
    return;
  }
  
  if (GLOBAL_dj_set_2_actiondone == 1 && GLOBAL_dj_set_2_result_timeout<0) txt_dj_set_2_result.Text = "Good! wait...";
  
  
  lvl_dj_set_2_timeleft.Value = lvl_dj_set_2_timeleft.Value+1;
  
  if (lvl_dj_set_2_timeleft.Value>20) {
  switch (GLOBAL_dj_set_2_reqaction) {
      case 0:
        txt_dj_set_2_reqaction.Text = "you need to spin the disk";
        break;
      case 1:
        txt_dj_set_2_reqaction.Text = "you need to ss scratch";
        break;
      case 2:
        txt_dj_set_2_reqaction.Text = "you need to set knob left";
        break;
      case 3:
        txt_dj_set_2_reqaction.Text = "you need to set knob right";
        break;
      case 4:
        txt_dj_set_2_reqaction.Text = "you have to stand back";
        GLOBAL_dj_set_2_actiondone = 1;
        break;  
    }
  } else txt_dj_set_2_reqaction.Text = "";
  
  if (lvl_dj_set_2_timeleft.Value==lvl_dj_set_2_timeleft.Max) {
    
    if (GLOBAL_dj_set_2_actiondone == 1) {
      txt_dj_set_2_result.Text = "Well Done! +7";
      lvl_dj_set_2_mission.Value=lvl_dj_set_2_mission.Value+7;
      GLOBAL_dj_set_2_result_timeout = 20;
    }
    else if (GLOBAL_dj_set_2_actiondone == 0) {
      txt_dj_set_2_result.Text = "Too Late -3";
      lvl_dj_set_2_mission.Value=lvl_dj_set_2_mission.Value-3;
      GLOBAL_dj_set_2_result_timeout = 20;
    }
    lvl_dj_set_2_timeleft.Value = 0;
    GLOBAL_dj_set_2_actiondone = 0;
    GLOBAL_dj_set_2_reqaction = Random(4);
    
  }
}

function fn_get_dust(int get_minerals) {
  //MINERALS
  txt_work_mine.Text = String.Format("%d",  GLOBAL_mining_members);
  
  if (GLOBAL_resourse_mdust >= GLOBAL_resourse_mdust_max) {
    //TO MUCH MINERALS  
    btn_work_mine.Enabled = false;
    GLOBAL_mining_members = 0;
    return;
  } 
  
  if (get_minerals>0) {
    GLOBAL_resourse_mdust = GLOBAL_resourse_mdust + get_minerals;
  }
  
  //GregStartsWorking
  //if (GLOBAL_lumberjack_members==0.0 && Random(1000)<90) GLOBAL_lumberjack_members = GLOBAL_greg_value;
  
  if (GLOBAL_mining_members > 0) {
  lvl_work_mine.Value = lvl_work_mine.Value + 1; 
    if (lvl_work_mine.Value == lvl_work_mine.Max) {
      lvl_work_mine.Value = 0;
      GLOBAL_resourse_mdust = GLOBAL_resourse_mdust+1;
      
      //GregStopsWorking
      //if (Random(100)>90) 
      GLOBAL_mining_members = GLOBAL_mining_members-1;
    }
  }
}

function fn_get_lumber(int get_lumber) {
  //LUMBER
  txt_work_greg.Text = String.Format("%d",  FloatToInt(GLOBAL_lumberjack_members,  eRoundNearest ));
  
  if (mouse.Mode>2) {
      GLOBAL_lumberjack_members = 0.0;
      return;
  }

  if (get_lumber>0) {
    GLOBAL_resourse_wsplinters = GLOBAL_resourse_wsplinters + get_lumber;
  }
  
  //GregStartsWorking
  if (GLOBAL_resourse_wsplinters < GLOBAL_resourse_wsplinters_max) {
  if (GLOBAL_available_members && GLOBAL_lumberjack_members==0.0 && Random(1000)<90) GLOBAL_lumberjack_members = GLOBAL_greg_value;
  }
  
  if (GLOBAL_lumberjack_members > 0.0) {
  lvl_work_greg.Value = lvl_work_greg.Value + 1; 
    if (lvl_work_greg.Value == lvl_work_greg.Max) {
      lvl_work_greg.Value = 0;
      GLOBAL_resourse_wsplinters = GLOBAL_resourse_wsplinters+1;
      
      //GregStopsWorking
      //if (Random(100)>90) 
      GLOBAL_lumberjack_members = 0.0;
    }
  }
  
  if (GLOBAL_resourse_wsplinters >= GLOBAL_resourse_wsplinters_max) {
    //TO MUCH LUMBER
    //btn_work_greg.Enabled=false;
    if (lvl_work_greg.Value == 0) {
    GLOBAL_lumberjack_members = 0.0;
    }
    //return;
  }
}

function fn_work_loop() {
  
    if (GLOBAL_available_members == 0 || GLOBAL_resourse_mdust >= GLOBAL_resourse_mdust_max) btn_work_mine.Enabled = false;
    else btn_work_mine.Enabled = true;
    if (GLOBAL_lumberjack_members == GLOBAL_greg_value) btn_work_greg.Enabled = false;
    else btn_work_greg.Enabled = true;
    
    //RESOURSES
    txt_work_wsplinters.Text = String.Format("x%d/%d", GLOBAL_resourse_wsplinters, GLOBAL_resourse_wsplinters_max);
    txt_work_mdust.Text = String.Format("%dkg/%d", GLOBAL_resourse_mdust, GLOBAL_resourse_mdust_max);
    txt_work_gcoins.Text = String.Format("x%d", GLOBAL_resourse_gcoin);
  
    if (mouse.Mode>2) {
      //btn_work_mine.Clickable = false;
      //btn_work_greg.Сlickable = false;
      
      btn_work_gcoins.Enabled = false;
      if(mouse.Mode != eModeMDust) btn_work_mdust.Enabled= false;
      btn_work_msplinters.Enabled = false;
      btn_work_item1.Enabled = false;
      btn_work_item2.Enabled = false;
      btn_work_item3.Enabled = false;
      //btn_work_item4.Enabled = false;
      btn_work_item5.Enabled = false;
    } else {
      //btn_work_mine.Сlickable = true;
      //btn_work_greg.Сlickable = true;
      
      btn_work_gcoins.Enabled = true;
      btn_work_mdust.Enabled= true;
      btn_work_msplinters.Enabled = true;
      btn_work_item1.Enabled = true;
      btn_work_item2.Enabled = true;
      btn_work_item3.Enabled = true;
      //btn_work_item4.Enabled = true;
      btn_work_item5.Enabled = true; 
      
    }
    
    
    //TEMP TODO
    mgui_work.Visible = true;
    //gui_hideout.Visible = true;
    
    lvl_hideout_day.Value = lvl_hideout_day.Value + 1;
    if (lvl_hideout_day.Value == lvl_hideout_day.Max) 
    {
    
      //Random EVENT HAPPENS: Visitor etc
      lvl_hideout_day.Value = 0;
      txt_work_visitordialog.Text = "*Elevator Music*";
      img_visitor_blacksmith.Visible = false;
      img_visitor_unfaithful.Visible = false;
      img_visitor_peasant.Visible = false;
      img_visitor_salesman.Visible = false;
      img_visitor_humanslave.Visible = false;
      txt_work_visitorname.Text = "";
      lvl_hideout_day.Max = 100;
      if(GLOBAL_work_visitor==0) GLOBAL_work_visitor=Random(6);
      else GLOBAL_work_visitor = 0;
      if(GLOBAL_work_visitor==5) {
        txt_work_visitordialog.Text = "Hey... Thought I can hide here from all of the helish mining and building shit FUCK... Oh dear KING, I am so thristy from all of this maining gold all day";
        txt_work_visitorname.Text = "THE RANDOM PEASANT";
        lvl_hideout_day.Max = 1000;
        img_visitor_peasant.Visible = true;
      }
      if(GLOBAL_work_visitor==6) {
        txt_work_visitordialog.Text = "....";
        txt_work_visitorname.Text = "SOMEONE HAVING NOTHING TO DO. something something";
        lvl_hideout_day.Max = 300;
        img_visitor_humanslave.Visible = true;
      }
      if(GLOBAL_work_visitor==4) {
        txt_work_visitordialog.Text = "... 1 gold coin please... Lords... [[...[[I need to travel back to my homeland... *burp*";
        txt_work_visitorname.Text = "THE TRAVELING BREWMASTER";
        lvl_hideout_day.Max = 3000;
        img_visitor_salesman.Visible = true;
      }
      if(GLOBAL_work_visitor==1) {
        txt_work_visitordialog.Text = "Greetings...";
        txt_work_visitorname.Text = "THE BLACKSMITH";
        lvl_hideout_day.Max = 1000;
        img_visitor_blacksmith.Visible = true;
      }
      if(GLOBAL_work_visitor==2) {
        txt_work_visitordialog.Text = "Just checking on you...";
        txt_work_visitorname.Text = "THE UNFAITHFUL";
        //she brought something
        if (Random(3)) {
          if (GLOBAL_resourse_mdust < 100) { //GLOBAL_resourse_mdust_max) {
            txt_work_visitordialog.Text = String.Format("%s%s", txt_work_visitordialog.Text,  "[[I brought you some mdust +mineral dust");
            GLOBAL_resourse_mdust = GLOBAL_resourse_mdust + 1 + Random(4);
          }
        }
        lvl_hideout_day.Max = 300;
        img_visitor_unfaithful.Visible = true;
      }
      
    }
    
    fn_get_lumber(0);
    fn_get_dust(0);
}
// called on every game cycle, except when the game is blocked
function repeatedly_execute()
{
  GLOBAL_available_members = FloatToInt(GLOBAL_members - IntToFloat(GLOBAL_mining_members) - IntToFloat(GLOBAL_quest_members) - GLOBAL_lumberjack_members,  eRoundNearest );
    
  txt_members.Text = String.Format("members: %d", FloatToInt(GLOBAL_members-GLOBAL_greg_value,  eRoundNearest ));
  txt_loitering.Text = String.Format("doing nothing: %d", GLOBAL_available_members);
  
  fn_location_info_dim();
  fn_members_info_dim();
  
  if (mgui_quests.Visible) {
    btn_quests.Enabled = false;
    btn_quests_x.Visible = true;
   //PauseGame();
   return;
  } else {
    btn_quests_x.Visible = false;
  }
  
  fn_check_location_change();
  fn_mouse_img();
  if (GLOBAL_dj_set_1_active) fn_dj_set_1_loop();
  if (GLOBAL_dj_set_2_active) fn_dj_set_2_loop();
  if (GLOBAL_hideout_active) fn_work_loop();
}

// called on every game cycle, even when the game is blocked
function repeatedly_execute_always()
{
  btn_quests.BringToFront();
  //mgui_members.Shown
}

function btn_dj_set_1_A_OnClick(GUIControl *control, MouseButton button)
{
  lvl_dj_set_1_scream.Value=lvl_dj_set_1_scream.Value+50+Random(50);
}

function btn_okay_OnClick(GUIControl *control, MouseButton button)
{
  switch (GLOBAL_dialog_state) {
    case -1:
      txt_dialog.Text = "DJ: [[I want out! This performance... it was unnatural! I WAS POSSESED!";
      GLOBAL_dialog_state = 0;
      break;
      //dj: [[This perfomance was unnatural...I want out! I was possesed!
    case 0:
      txt_dialog.Text = "Leader Greg: [[NO... I forgot all of the warcraft 3 lore... you need to study wowhead to replace me as the cult leader!";
      img_greg.Visible = true;
      GLOBAL_dialog_state = 1;
      break;
    case 1:
      txt_dialog.Text = "Leader Greg: [[Sorry! This is not related to the game! Nevermind";
      GLOBAL_dialog_state = 2;
      break;
    case 2:
      GLOBAL_greg_value = GLOBAL_greg_value - 0.1;
      txt_dialog.Text = "dj: [[Uh... I've had enough";
      img_dj.BringToFront();
      btn_okay.BringToFront();
      GLOBAL_dialog_state = 3;
      break;
    case 3:
      GLOBAL_members = GLOBAL_members - 1.0;
      txt_dialog.Text = "";
      img_dj.Visible = false;
      GLOBAL_dialog_state = 4;
      break;
    case 4:
      txt_dialog.Text = "Greg: [[Nevermind... We need to make haste and prepare for the undead summoning ritual. We need more cult members!";
      img_dj.Visible = false;
      GLOBAL_dialog_state = 5;
      break;
    case 5:
      txt_quests.Text = "HELP: [[You need to gather 10 members ...beer may help and I heard blacksmith needs mineral dust. He comes by sometimes ... maybe he can help!";
      txt_quest2.Visible=true;
      txt_dialog.Visible = false;
      img_greg.Visible = false;
      btn_okay.Visible = false;
      GLOBAL_hideout_active=true;
      mgui_quests.Visible=true;
      break;
  }
  
}

function btn_quests_x_OnClick(GUIControl *control, MouseButton button)
{ 
btn_quests.Enabled=true;
mgui_quests.Visible=false;
UnPauseGame();
}

function btn_quests_OnClick(GUIControl *control, MouseButton button)
{
mgui_quests.Visible=true;
}



function btn_work_mine_OnClick(GUIControl *control, MouseButton button)
{
  //Greg doesn't work at the mine
  //UPD 21/05/2024: Greg now does
  if ((GLOBAL_lumberjack_members == GLOBAL_greg_value && GLOBAL_available_members > 0) || IntToFloat(GLOBAL_available_members) > GLOBAL_greg_value) GLOBAL_mining_members = GLOBAL_mining_members + 1;
}


function btn_work_greg_OnClick(GUIControl *control, MouseButton button)
{
  if (!FloatToInt(GLOBAL_lumberjack_members) && GLOBAL_available_members) GLOBAL_lumberjack_members = GLOBAL_greg_value;
}

function btn_work_mdust_OnClick(GUIControl *control, MouseButton button)
{
  if(mouse.Mode == eModeMDust) {
    GLOBAL_resourse_mdust = GLOBAL_resourse_mdust + 1;
    mouse.Mode = 1;
  } else {
  if(GLOBAL_resourse_mdust>0) {
    GLOBAL_resourse_mdust = GLOBAL_resourse_mdust - 1;
    mouse.Mode = eModeMDust;
  }
  }
}

function img_visitor_OnClick(GUIControl *control, MouseButton button)
{
  if(GLOBAL_work_visitor==1){
    if(mouse.Mode==eModeMDust) {
      if (GLOBAL_work_blacksmith_mdust==0) {
      GLOBAL_work_blacksmith_mdust=GLOBAL_work_blacksmith_mdust+1;
      txt_work_visitordialog.Text = "WOW... as expected from Greg ...that's some good *illegally obtained* mineral dust... too bad it's practically worthless... I will give you 1 gold coin for 10kg just because we are friends hah";
      mouse.Mode=1;
      return;
      }
      if (GLOBAL_work_blacksmith_mdust>0) {
      GLOBAL_work_blacksmith_mdust=GLOBAL_work_blacksmith_mdust+1;
      txt_work_visitordialog.Text = String.Format("I expect %dkg more",  10-GLOBAL_work_blacksmith_mdust);
      mouse.Mode=1;
      }
      if (GLOBAL_work_blacksmith_mdust==10) {
      GLOBAL_work_blacksmith_mdust=0;
      txt_work_visitordialog.Text = "As promised heres +1 gold coin!";
      GLOBAL_resourse_gcoin=GLOBAL_resourse_gcoin+1;
      btn_work_gcoins.Visible=true;
      txt_work_gcoins.Visible=true;
      mouse.Mode=1;
      }
    }
  }
}

function lvl_dj_set_2_knob_OnChange(GUIControl *control)
{
if (lvl_dj_set_2_knob.Value>1) lvl_dj_set_2_knob.Value=1;
}

function btn_dj_set_2_spin_OnClick(GUIControl *control, MouseButton button)
{
  fn_dj_set_2_action(0);
}

function btn_dj_set_2_scratch_OnClick(GUIControl *control, MouseButton button)
{
  fn_dj_set_2_action(1);
}

function btn_work_gcoins_OnClick(GUIControl *control, MouseButton button)
{

}
